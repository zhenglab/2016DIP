#include<iostream>
#include<opencv2/opencv.hpp>
#include <opencv2/highgui/highgui.hpp>
#include <opencv2/imgproc/imgproc.hpp>
using namespace cv;
using namespace std;
int main()
{

    Mat srcimage1 = imread("11.tif");
    
    imshow("Original", srcimage1);

    imwrite("original.jpg", srcimage1);
    
    Mat srcimage2 = imread("22.tif");
    
    imshow("yinying", srcimage2);

    imwrite("yinying.jpg", srcimage2);

      
      int r1 = srcimage1.rows;
      int c1 = srcimage1.cols;
   
        Mat srcimage3=Mat::zeros(r1,c1,srcimage1.type());
        Mat dstimage;
        dstimage.create(r1,c1,srcimage1.type());
        Mat dstimage1;
        resize(srcimage1,dstimage1,Size(r1,r1),(0,0),(0,0),3); 
        imshow("reducereise", dstimage1);

        imwrite("reducereise.jpg", dstimage1);
       
       
       for(int i = 0;i < r1;i++)
           {
             for(int j = 0;j < c1;j++)
             {
       
		     for(int k=0;k < r1;k++)
		     {
		     
		      srcimage3.at<Vec3b>(i,j)[0] = srcimage3.at<Vec3b>(i,j)[0] + dstimage1.at<Vec3b>(i,k)[0]*srcimage2.at<Vec3b>(k,j)[0];
		 
		      srcimage3.at<Vec3b>(i,j)[1] = srcimage3.at<Vec3b>(i,j)[1] + dstimage1.at<Vec3b>(i,k)[1]*srcimage2.at<Vec3b>(k,j)[1];

		      srcimage3.at<Vec3b>(i,j)[2] = srcimage3.at<Vec3b>(i,j)[2] + dstimage1.at<Vec3b>(i,k)[2]*srcimage2.at<Vec3b>(k,j)[2];
		       
		     }        
             }       
         }
        for(int i = 0;i < r1;i++)
           {
             for(int j = 0;j < c1;j++)
             {
              dstimage.at<Vec3b>(i,j)[0] = srcimage3.at<Vec3b>(i,j)[0];
              dstimage.at<Vec3b>(i,j)[1] = srcimage3.at<Vec3b>(i,j)[1];            
              dstimage.at<Vec3b>(i,j)[2] = srcimage3.at<Vec3b>(i,j)[2]; 
            }
      	} 
      imshow("xiaoguotu", dstimage);

      imwrite("xiaoguotu.jpg", dstimage);

      waitKey(0);

      return 0;
}
